# Syllable based primitive letter to sound rules for italian
# generates also syll boundaries. 
# Notes:
#  The question mark (?) indicates places in which a geminization 
#  is assumed to happen across a syllable boundary. In a later
#  process a sequence such as ca-?ssa will be replaced by cas-sa
#  The ! is used to indicate that the syllable will be stressed
#  This is used for accentuated vowels.
#  try this with 
# pizzastratiatella
word=> multisyll;

multisyll=> syll
	  | syll + <-> + multisyll;

syll =>  demisyll + coda;


demisyll => specialdemi
       | semvow + strongvow
       | onset + cleardiph
       | onset + Vow
       | onset + semvow + strongvow
       | cleardiph
       | Vow;

onset =>   esse + UVStop + Liq
         | esse + Fricsanss + Liq
         | voiceds + VStop + Liq
         | voiceds + VStop
         | voiceds + Liq
	 | UVStop + Liq
         | esse + UVStop
         | zeta + VStop
	 | UVStop + Liq
	 | pi + esse
         | pi + enne
	 | "gr/gR/"
	 | VStop + Liq
	 | gn
         | dz
	 | pi + semvow
	 | voiceds
	 | Cons
         | semvow;

coda =>   EMPTY
        | Stop
        | Fricsanss       // no s - it goes to next syllable
        | Nas
        | Liq
        | zeta;

Cons =>  Stop 
        | Fric 
        | Nas 
        | Liq;

Stop => pi  | ti | kappa | bi | di | stopgi;
Nas=> emme | enne ;
Liq=> elle | erre ;
SVow=> vowa | vowo | vowe;
WVow=> vowu | vowi;
Vow => vowa | vowo | vowe | vowu | vowi;
Vowback=> vowa | vowo | vowu;
Vowfront=> vowe | vowi;
strongvow => vowa | vowe | vowo;
Vownoi => vowa | vowe | vowo | vowu;

Fric=> effe | esse | vu | zeta | tc | sch | tsch ;
Fricsanss => effe | vu | tc | sch | tsch ;
UVStop => pi | ti | kappa;
VStop => bi | di | stopgi;

vowa => "a/a/" | "á/a/" | "à/!a/";
vowo => "o/o/" | "ó/c/" | "ò/!c/";
vowe => "e/e/" | "é/E/" | "è/!E/";
vowu => "u/u/" | "ú/u/" | "ù/!u/";
vowi => "i/i/" | "ì/!i/" | "í/i/" | "y/i/";
semvow=>"i/j/" | "j/j/" | "y/j/" | "h//" | "w/w/";
emme=>"m/m/" | "mm/?mm/";
enne=> "n/n/"| "nn/?mn/";
erre=> "r/R/"| "rr/?RR/";
elle=> "l/l/" | "ll/?ll/";
lambda => "gl/L/" | "ggl/?LL/" ;
 
effe=> "f/f/" | "ff/?ff/";
esse=> "s/s/" | "ss/?ss/";
vu => "v/v/"   | "vv/?vv/" | "w/v/";
zeta=> "zz/?T9/";
tc => "c/7/"   | "cc/?77/";
sch => "sh/S/" | "sc/SS/" ;
tsch => "tsh/tS/";
ts => "z/9/" | "zz/?T9/";
sk => "sc/sk/" | "sch/sk/";
dgz => "g/8/" | "gg/?D8/" ;
dgj => "gi/8/" | "ggi/?D8/";
gn => "gn/H/";
pi => "p/p/" | "pp/?Pp/";
ti => "t/t/" | "tt/?Tt/";
kappa => "c/k/" | "k/k/" | "cc/?Kk/" | "ck/?Kk/" | "x/?Ks/";
bi => "b/b/" | "bb/?Bb/";
di => "d/d/" | "dd/?Dd/";
stopgi =>  "gh/g/" | "g/g/" | "gg/?Gg/"   ;  // Note on the left is the stop g
dz => "z/0/";
voiceds=> "z/z/";
trie specialdemi="specialdemi.ita";
trie cleardiph="obviousdiphthongs.ita";
